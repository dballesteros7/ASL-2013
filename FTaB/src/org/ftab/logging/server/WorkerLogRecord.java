package org.ftab.logging.server;

import java.util.logging.Level;

import org.ftab.logging.SystemEvent;
import org.ftab.server.MessagingWorker;

/**
 * Log record for logs generated by the  messaging worker
 * @author Jean-Pierre Smith
 *
 */
@SuppressWarnings("serial")
public class WorkerLogRecord extends ServerLogRecord {
	
	/**
	 * Creates a new log with fine level for standard tracing.
	 * @param worker The worker creating the log
	 * @param msg The message for the log
	 */
	public WorkerLogRecord(MessagingWorker worker, String msg) {
		super(Level.FINE, worker.getWorkerTag(), SystemEvent.CHANNEL_IO, msg);
	}

	/**
	 * Creates a new log with fine level for standard tracing.
	 * @param worker The worker creating the log
	 * @param msg The message for the log
	 * @param associatedRec The associated log record
	 */
	public WorkerLogRecord(MessagingWorker worker, String msg, ServerLogRecord associatedRec) {
		super(Level.FINE, worker.getWorkerTag(), SystemEvent.CHANNEL_IO, msg, associatedRec);
	}
	
	/**
	 * Creates a new log with severe level for a failure or exception.
	 * @param worker The worker creating the log
	 * @param msg The message for the log
	 * @param associatedRec The associated log record
	 * @param e An exception or other throwable to associate with this log
	 */
	public WorkerLogRecord(MessagingWorker worker, String msg, ServerLogRecord associatedRec,
			Throwable e) {
		super(Level.SEVERE, worker.getWorkerTag(), SystemEvent.CHANNEL_IO, msg, associatedRec);
		
		this.setThrown(e);
	}

	/**
	 * Creates a new log with severe level for a failure or exception.
	 * @param worker The worker creating the log
	 * @param msg The message for the log
	 * @param e An exception or other throwable to associate with this log
	 */
	public WorkerLogRecord(MessagingWorker worker, String msg, Throwable e) {
		super(Level.SEVERE, worker.getWorkerTag(), SystemEvent.CHANNEL_IO, msg);
		
		this.setThrown(e);
	}
}
